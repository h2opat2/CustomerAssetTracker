// <auto-generated />
using System;
using CustomerAssetTracker.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerAssetTracker.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522162704_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("CustomerAssetTracker.Core.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsForeign")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MaintenanceContract")
                        .HasColumnType("TEXT");

                    b.Property<string>("Software")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MachineId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.ServiceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Technician")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("ServiceRecords");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.License", b =>
                {
                    b.HasOne("CustomerAssetTracker.Core.Customer", "Customer")
                        .WithMany("Licenses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomerAssetTracker.Core.Machine", "Machine")
                        .WithMany("Licenses")
                        .HasForeignKey("MachineId");

                    b.Navigation("Customer");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Machine", b =>
                {
                    b.HasOne("CustomerAssetTracker.Core.Customer", "Customer")
                        .WithMany("Machines")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.ServiceRecord", b =>
                {
                    b.HasOne("CustomerAssetTracker.Core.Machine", "Machine")
                        .WithMany("ServiceRecords")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Customer", b =>
                {
                    b.Navigation("Licenses");

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Machine", b =>
                {
                    b.Navigation("Licenses");

                    b.Navigation("ServiceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
