// <auto-generated />
using System;
using CustomerAssetTracker.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerAssetTracker.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("CustomerAssetTracker.Core.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsForeign")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Úzká, Praha 4",
                            IsForeign = false,
                            Name = "ABC Company"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 International Blvd, New York",
                            IsForeign = true,
                            Name = "Global Corp"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hlavní 4, Pardubice",
                            IsForeign = false,
                            Name = "KovoRobo"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Dolní 2, Brno",
                            IsForeign = false,
                            Name = "Metal2U s.r.o."
                        });
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MaintenanceContract")
                        .HasColumnType("TEXT");

                    b.Property<string>("Software")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MachineId");

                    b.ToTable("Licenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            MachineId = 1,
                            MaintenanceContract = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Software = "PC-DMIS",
                            Type = 1,
                            Vendor = "Hexagon",
                            Version = "2023.1"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            MachineId = 2,
                            MaintenanceContract = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Software = "PolyWorks",
                            Type = 2,
                            Vendor = "InnovMetric",
                            Version = "2024"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            MachineId = 3,
                            Software = "SpatialAnalyzer",
                            Type = 0,
                            Vendor = "New River Kinematics",
                            Version = "2023"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            MachineId = 4,
                            MaintenanceContract = new DateTime(2025, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Software = "PolyWorks",
                            Type = 1,
                            Vendor = "InnovMetric",
                            Version = "2024"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            Software = "IMK UP!",
                            Type = 0,
                            Vendor = "Topmes",
                            Version = "3.4.3"
                        });
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            MachineType = 0,
                            Manufacturer = "Hexagon",
                            Name = "CMM XYZ-1000",
                            PurchaseDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "CMM-SN-001"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            MachineType = 1,
                            Manufacturer = "FARO",
                            Name = "Arm R-7",
                            PurchaseDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "ARM-SN-002"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            MachineType = 3,
                            Manufacturer = "Leica",
                            Name = "Laser Tracker LT-500",
                            PurchaseDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "LT-SN-003"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            MachineType = 2,
                            Manufacturer = "Scantech",
                            Name = "NimbleTrack",
                            PurchaseDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "SK1230054"
                        });
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.ServiceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Technician")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("ServiceRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MachineId = 1,
                            Technician = "Jan Novák",
                            Text = "Pravidelná kalibrace a údržba. Vyměněny filtry."
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MachineId = 2,
                            Technician = "Petra Svobodová",
                            Text = "Oprava kloubu ramene. Testováno a funkční."
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MachineId = 1,
                            Technician = "Jan Novák",
                            Text = "Periodická 1 roční kalibrace dle ISO 10360"
                        });
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.License", b =>
                {
                    b.HasOne("CustomerAssetTracker.Core.Customer", "Customer")
                        .WithMany("Licenses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomerAssetTracker.Core.Machine", "Machine")
                        .WithMany("Licenses")
                        .HasForeignKey("MachineId");

                    b.Navigation("Customer");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Machine", b =>
                {
                    b.HasOne("CustomerAssetTracker.Core.Customer", "Customer")
                        .WithMany("Machines")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.ServiceRecord", b =>
                {
                    b.HasOne("CustomerAssetTracker.Core.Machine", "Machine")
                        .WithMany("ServiceRecords")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Customer", b =>
                {
                    b.Navigation("Licenses");

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("CustomerAssetTracker.Core.Machine", b =>
                {
                    b.Navigation("Licenses");

                    b.Navigation("ServiceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
